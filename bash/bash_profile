if type eza >/dev/null 2>&1; then
    alias ls="eza --color=always --group-directories-first --git"
    alias l="eza -alg --color=always --group-directories-first --git"       # List in long format, include dotfiles
    alias la="eza -a --color=always --group-directories-first --git"
    alias ll="eza -lg --color=always --group-directories-first --git"
    alias ld="eza -lgd */ --color=always --group-directories-first --git"   # List in long format, only directories
else
    alias ls="ls --color=auto"
    alias l="ls -la"       # List in long format, include dotfiles
    alias la="ls -a"
    alias ll="ls -l"
    alias ld="ls -ld */"   # List in long format, only directories
fi
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias cd..="cd ../"
alias vpnold="sudo openvpn --config /etc/openvpn/frigg.ovpn"
alias vpnoldall="sudo openvpn --config /etc/openvpn/frigg-all.ovpn"
alias vpn="wg-quick up nsda-hardy"
alias vpndown="wg-quick down nsda-hardy"
alias mail="/opt/thunderbird/thunderbird -profile /data/Mail/thunderbird/r60q4tm2.default-release &"
[ -d "$HOME/Nextcloud/Writing/Journals" ] && alias journal="vim `/usr/bin/ls -t $HOME/Nextcloud/Writing/Journals/*.md | head -1`"
alias wav2mp3='for i in *.wav; do ffmpeg -i "$i" -f mp3 -b:a 320k "${i%.*}.mp3"; done'
alias user-packages="comm -23 <(aptitude search '~i !~M' -F '%p' | sed \"s/ *$//\" | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)"

# Make Tab autocomplete regardless of filename case
bind 'set completion-ignore-case on'
# List all matches in case multiple possible completions are possible
bind 'set show-all-if-ambiguous on'

export EDITOR="vim"
export CLICOLOR=1

# Don't include duplicate lines in history
export HISTCONTROL=ignoredups

# Set gpodder home
export GPODDER_HOME=/data/Podcasts/gpodder/config
export GPODDER_DOWNLOAD_DIR=/data/Podcasts

download_bc() {
    yt-dlp --sleep-interval 20 -x --ignore-errors --audio-format mp3 --add-metadata -o "%(artist)s - %(playlist)s/%(track_number)s - %(track)s.%(ext)s" "$1"
}

download_bc_bulk() {
    while IFS= read -r line; do
       download_bc $line
    done < urls.txt
}

download_yt() {
	yt-dlp --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 320K "$1"
}

download_yt_playlist() {
    yt-dlp --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 320K --add-metadata -o "%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" --yes-playlist "$1"
}

download_yt_user() {
    yt-dlp --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 320K --add-metadata -o "%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" "$1"
}

album_split() {
    cd ~/projects/album-splitter && source venv/bin/activate && python3 -m album_splitter -yt "$1" --artist "$2" --album "$3"
}

[ -d "$HOME/.cargo" ] && . "$HOME/.cargo/env"

