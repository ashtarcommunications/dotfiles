"Use VIM settings, not VI - has to be first
set nocompatible

"Use the Solarized Dark theme and syntax highlighting
syntax enable
set guifont=Consolas:h10 	"More readable font
set background=dark
colorscheme solarized
highlight Normal ctermbg=NONE
highlight nonText ctermbg=NONE

"General Options
set number			"Line numbers
set incsearch		"Find as we type
set showmatch		"Show matching brackets
set hlsearch		"Highlight search matches
set ignorecase		"Case insensitive search
set smartcase		"Unless we type a capital
set scrolloff=8		"Scroll away from margins
set sidescrolloff=15
set sidescroll=1
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set smarttab
set softtabstop=4
set expandtab		"Tabs to spaces
set ruler
set nobackup		"Turn off swap files
set nowritebackup
set noswapfile
set hidden			"Buffer in background without window
set visualbell		"No sounds
set backspace=indent,eol,start
set laststatus=2
set splitbelow		"Open split windows below current

"Spell checking
augroup set_spell
    autocmd!
    autocmd FileType text setlocal spell
    autocmd FileType text hi SpellBad cterm=underline
    autocmd FileType text hi SpellBad term=underline
    autocmd FileType markdown setlocal spell
    autocmd FileType markdown hi SpellBad cterm=underline
    autocmd FileType markdown hi SpellBad term=underline
augroup END

"Key mappings
imap jk <ESC>		

"Diff function
set diffexpr=MyDiff()
function MyDiff()
	let opt = '-a --binary '
	if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
	if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
	let arg1 = v:fname_in
	if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
	let arg2 = v:fname_new
	if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
	let arg3 = v:fname_out
	if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
	let eq = ''
	if $VIMRUNTIME =~ ' '
		if &sh =~ '\<cmd'
			let cmd = '""' . $VIMRUNTIME . '\diff"'
			let eq = '"'
		else
			let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
		endif
	else
		let cmd = $VIMRUNTIME . '\diff'
	endif
	silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

"vim-plug config
"https://github.com/junegunn/vim-plug
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdcommenter'
Plug 'pangloss/vim-javascript'
Plug 'godlygeek/tabular'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'preservim/vim-markdown'

"Plugins that might be useful someday
"Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
"Plug 'scrooloose/syntastic'

call plug#end()

